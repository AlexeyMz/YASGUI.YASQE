{"project":{},"files":{"/home/lrd900/code/yasguiQueryEditor/src/main.js":{"name":"/home/lrd900/code/yasguiQueryEditor/src/main.js","modules":{},"classes":{"YasguiQuery":1},"fors":{},"namespaces":{}}},"modules":{},"classes":{"YasguiQuery":{"name":"YasguiQuery","shortname":"YasguiQuery","classitems":[],"plugins":[],"extensions":[],"plugin_for":[],"extension_for":[],"file":"/home/lrd900/code/yasguiQueryEditor/src/main.js","line":13,"description":"Main YASGUI-Query constructor","is_constructor":1,"params":[{"name":"parent","description":"element to append editor to.","type":"DOM-Element"},{"name":"settings","description":"","type":"Object"}],"return":{"description":"YASGUI-query document","type":"Doc"}}},"classitems":[{"file":"/home/lrd900/code/yasguiQueryEditor/src/main.js","line":29,"description":"Extend config object, which we will pass on to the CM constructor later on.\nNeed this, to make sure our own 'onBlur' etc events do not get overwritten by people who add their own onblur events to the config\nAdditionally, need this to include the CM defaults ourselves. CodeMirror has a method for including defaults, but we can't rely on that one: it assumes flat config object, where we have nested objects (e.g. the persistency option)","access":"private","tagname":"","class":"YasguiQuery"},{"file":"/home/lrd900/code/yasguiQueryEditor/src/main.js","line":41,"description":"Add extra functions to the CM document (i.e. the codemirror instantiated object)","access":"private","tagname":"","class":"YasguiQuery"},{"file":"/home/lrd900/code/yasguiQueryEditor/src/main.js","line":46,"description":"Execute query. Pass a callback function, or a configuration object (see default settings below for possible values)\nI.e., you can change the query configuration by either changing the default settings, changing the settings of this document, or by passing query settings to this function","itemtype":"method","name":"doc.query","params":[{"name":"function|object","description":""}],"class":"YasguiQuery"},{"file":"/home/lrd900/code/yasguiQueryEditor/src/main.js","line":60,"description":"initialize ajax config","class":"YasguiQuery"},{"file":"/home/lrd900/code/yasguiQueryEditor/src/main.js","line":72,"description":"add complete, beforesend, etc handlers (if specified)","class":"YasguiQuery"},{"file":"/home/lrd900/code/yasguiQueryEditor/src/main.js","line":85,"description":"add named graphs to ajax config","class":"YasguiQuery"},{"file":"/home/lrd900/code/yasguiQueryEditor/src/main.js","line":91,"description":"add default graphs to ajax config","class":"YasguiQuery"},{"file":"/home/lrd900/code/yasguiQueryEditor/src/main.js","line":98,"description":"merge additional request headers","class":"YasguiQuery"},{"file":"/home/lrd900/code/yasguiQueryEditor/src/main.js","line":102,"description":"add additional request args","class":"YasguiQuery"},{"file":"/home/lrd900/code/yasguiQueryEditor/src/main.js","line":110,"description":"Store completions","itemtype":"method","name":"doc.storeCompletions","params":[{"name":"type","description":"Type of completions: [\"prefixes\", \"properties\", \"classes\"]","type":"String"},{"name":"completions","description":"Array containing a set of strings (IRIs)","type":"Array"}],"class":"YasguiQuery"},{"file":"/home/lrd900/code/yasguiQueryEditor/src/main.js","line":139,"description":"Add event handlers","class":"YasguiQuery"},{"file":"/home/lrd900/code/yasguiQueryEditor/src/main.js","line":161,"description":"privates","class":"YasguiQuery"},{"file":"/home/lrd900/code/yasguiQueryEditor/src/main.js","line":196,"description":"Get defined prefixes from query as array, in format {\"prefix:\" \"uri\"}","params":[{"name":"cm","description":""}],"return":{"description":"","type":"Array"},"class":"YasguiQuery"},{"file":"/home/lrd900/code/yasguiQueryEditor/src/main.js","line":226,"description":"Append prefix declaration to list of prefixes in query window.","params":[{"name":"cm","description":""},{"name":"prefix","description":""}],"class":"YasguiQuery"},{"file":"/home/lrd900/code/yasguiQueryEditor/src/main.js","line":258,"description":"Get the used indentation for a certain line","params":[{"name":"cm","description":""},{"name":"line","description":""},{"name":"charNumber","description":""}],"return":{"description":""},"class":"YasguiQuery"},{"file":"/home/lrd900/code/yasguiQueryEditor/src/main.js","line":382,"description":"Static Utils","class":"YasguiQuery"},{"file":"/home/lrd900/code/yasguiQueryEditor/src/main.js","line":388,"description":"Fetch prefixes from prefix.cc, and store in the YASGUI-Query object","params":[{"name":"doc","description":"","type":"Yasgui-Query"}],"itemtype":"method","name":"YasguiQuery.fetchFromPrefixCc","class":"YasguiQuery"},{"file":"/home/lrd900/code/yasguiQueryEditor/src/main.js","line":406,"description":"Determine unique ID of the YASGUI-Query object. Useful when several objects are loaded on the same page, and all have 'persistency' enabled.\nCurrently, the ID is determined by selecting the nearest parent in the DOM with an ID set","params":[{"name":"doc","description":"","type":"Yasgui-Query"}],"itemtype":"method","name":"YasguiQuery.fetchFromPrefixCc","class":"YasguiQuery"},{"file":"/home/lrd900/code/yasguiQueryEditor/src/main.js","line":607,"description":"Check whether typed prefix is declared. If not, automatically add declaration\nusing list from prefix.cc","params":[{"name":"cm","description":""}],"class":"YasguiQuery"},{"file":"/home/lrd900/code/yasguiQueryEditor/src/main.js","line":661,"description":"The default options of Yasgui-Query (check the CodeMirror documentation for even more options, such as disabling line numbers, or changing keyboard shortcut keys). \nEither change the default options by setting YasguiQuery.defaults, or by passing your own options as second argument to the YasguiQuery constructor","itemtype":"attribute","name":"YasguiQuery.defaults","class":"YasguiQuery"},{"file":"/home/lrd900/code/yasguiQueryEditor/src/main.js","line":670,"description":"Query string","itemtype":"property","name":"value","type":"String","default":"\"SELECT * {?x ?y ?z} \\nLIMIT 10\"","class":"YasguiQuery"},{"file":"/home/lrd900/code/yasguiQueryEditor/src/main.js","line":687,"description":"Extra shortcut keys. Check the CodeMirror manual on how to add your own","itemtype":"property","name":"extraKeys","type":"object","class":"YasguiQuery"},{"file":"/home/lrd900/code/yasguiQueryEditor/src/main.js","line":717,"description":"Change persistency settings for query and completions. Setting the values to null, will disable persistancy: nothing is stored between browser sessions\nSetting the values to a string (or a function which returns a string), will store e.g. the query in localstorage using the specified string.","itemtype":"property","name":"persistency","type":"object","class":"YasguiQuery"},{"file":"/home/lrd900/code/yasguiQueryEditor/src/main.js","line":725,"description":"Persistency setting for query. Default ID is dynamically generated using the determineID function, to avoid collissions when using multiple YASGUI-Query items on one page","itemtype":"property","name":"persistency.query","type":"function|string","default":"YasguiQuery.determineId()'","class":"YasguiQuery"},{"file":"/home/lrd900/code/yasguiQueryEditor/src/main.js","line":733,"description":"Persistency setting for query. Default ID is a static string, i.e., multiple Yasgui-Query instances use the same set of prefixes","itemtype":"property","name":"persistency.prefixes","type":"function|string","default":"\"prefixes\"","class":"YasguiQuery"},{"file":"/home/lrd900/code/yasguiQueryEditor/src/main.js","line":742,"description":"Types of completions. Possible keys: \"prefixes\". Setting the value to null, will disable autocompletion for this particular type. \nSet the values to an array (or a function which returns an array), and you'll be able to use the specified prefixes. \nAn asynchronous function is possible. Just make sure you call doc.storeCompletions() in your callback\nBy default, only prefix autocompletions are fetched (from prefix.cc)","itemtype":"property","name":"autocompletions","type":"object","class":"YasguiQuery"},{"file":"/home/lrd900/code/yasguiQueryEditor/src/main.js","line":755,"description":"Settings for querying sparql endpoints","itemtype":"property","name":"query","type":"object","class":"YasguiQuery"},{"file":"/home/lrd900/code/yasguiQueryEditor/src/main.js","line":762,"description":"Endpoint to query","itemtype":"property","name":"query.endpoint","type":"String","default":"\"http://dbpedia.org/sparql\"","class":"YasguiQuery"},{"file":"/home/lrd900/code/yasguiQueryEditor/src/main.js","line":770,"description":"Request method via which to access SPARQL endpoint","itemtype":"property","name":"query.requestMethod","type":"String","default":"\"GET\"","class":"YasguiQuery"},{"file":"/home/lrd900/code/yasguiQueryEditor/src/main.js","line":778,"description":"Query accept header","itemtype":"property","name":"query.acceptHeader","type":"String","default":"application/sparql-results+json","class":"YasguiQuery"},{"file":"/home/lrd900/code/yasguiQueryEditor/src/main.js","line":787,"description":"Named graphs to query.","itemtype":"property","name":"query.namedGraphs","type":"array","default":"[]","class":"YasguiQuery"},{"file":"/home/lrd900/code/yasguiQueryEditor/src/main.js","line":795,"description":"Default graphs to query.","itemtype":"property","name":"query.defaultGraphs","type":"array","default":"[]","class":"YasguiQuery"},{"file":"/home/lrd900/code/yasguiQueryEditor/src/main.js","line":804,"description":"Additional request arguments. Add them in the form: {name: \"name\", value: \"value\"}","itemtype":"property","name":"query.args","type":"array","default":"[]","class":"YasguiQuery"},{"file":"/home/lrd900/code/yasguiQueryEditor/src/main.js","line":813,"description":"Additional request headers","itemtype":"property","name":"query.headers","type":"array","default":"{}","class":"YasguiQuery"},{"file":"/home/lrd900/code/yasguiQueryEditor/src/main.js","line":823,"description":"Handlers to execute query. Possible keys beforeSend, complete, error, success. See https://api.jquery.com/jQuery.ajax/ for more information on these handlers, and their arguments.","itemtype":"property","name":"query.handlers","type":"object","class":"YasguiQuery"},{"file":"/home/lrd900/code/yasguiQueryEditor/src/main.js","line":846,"description":"Set query (CodeMirror)","itemtype":"method","name":"doc.setValue","params":[{"name":"query","description":"","type":"String"}],"class":"YasguiQuery"},{"file":"/home/lrd900/code/yasguiQueryEditor/src/main.js","line":853,"description":"Get value (CodeMirror)","itemtype":"method","name":"doc.getValue","return":{"description":"query","type":"String"},"class":"YasguiQuery"},{"file":"/home/lrd900/code/yasguiQueryEditor/src/main.js","line":860,"description":"Set size (CodeMirror). Use null value to leave width or height unchanged","params":[{"name":"width","description":"","type":"Number|string"},{"name":"height:","description":"","type":"Number|string"}],"itemtype":"method","name":"doc.setSize","class":"YasguiQuery"}],"warnings":[{"message":"replacing incorrect tag: returns with return","line":" /home/lrd900/code/yasguiQueryEditor/src/main.js:196"},{"message":"replacing incorrect tag: returns with return","line":" /home/lrd900/code/yasguiQueryEditor/src/main.js:258"},{"message":"Missing item type\nExtend config object, which we will pass on to the CM constructor later on.\nNeed this, to make sure our own 'onBlur' etc events do not get overwritten by people who add their own onblur events to the config\nAdditionally, need this to include the CM defaults ourselves. CodeMirror has a method for including defaults, but we can't rely on that one: it assumes flat config object, where we have nested objects (e.g. the persistency option)","line":" /home/lrd900/code/yasguiQueryEditor/src/main.js:29"},{"message":"Missing item type\nAdd extra functions to the CM document (i.e. the codemirror instantiated object)","line":" /home/lrd900/code/yasguiQueryEditor/src/main.js:41"},{"message":"Missing item type\ninitialize ajax config","line":" /home/lrd900/code/yasguiQueryEditor/src/main.js:60"},{"message":"Missing item type\nadd complete, beforesend, etc handlers (if specified)","line":" /home/lrd900/code/yasguiQueryEditor/src/main.js:72"},{"message":"Missing item type\nadd named graphs to ajax config","line":" /home/lrd900/code/yasguiQueryEditor/src/main.js:85"},{"message":"Missing item type\nadd default graphs to ajax config","line":" /home/lrd900/code/yasguiQueryEditor/src/main.js:91"},{"message":"Missing item type\nmerge additional request headers","line":" /home/lrd900/code/yasguiQueryEditor/src/main.js:98"},{"message":"Missing item type\nadd additional request args","line":" /home/lrd900/code/yasguiQueryEditor/src/main.js:102"},{"message":"Missing item type\nAdd event handlers","line":" /home/lrd900/code/yasguiQueryEditor/src/main.js:139"},{"message":"Missing item type\nprivates","line":" /home/lrd900/code/yasguiQueryEditor/src/main.js:161"},{"message":"Missing item type\nGet defined prefixes from query as array, in format {\"prefix:\" \"uri\"}","line":" /home/lrd900/code/yasguiQueryEditor/src/main.js:196"},{"message":"Missing item type\nAppend prefix declaration to list of prefixes in query window.","line":" /home/lrd900/code/yasguiQueryEditor/src/main.js:226"},{"message":"Missing item type\nGet the used indentation for a certain line","line":" /home/lrd900/code/yasguiQueryEditor/src/main.js:258"},{"message":"Missing item type\nStatic Utils","line":" /home/lrd900/code/yasguiQueryEditor/src/main.js:382"},{"message":"Missing item type\nCheck whether typed prefix is declared. If not, automatically add declaration\nusing list from prefix.cc","line":" /home/lrd900/code/yasguiQueryEditor/src/main.js:607"}]}